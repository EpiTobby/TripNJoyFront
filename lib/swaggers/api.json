{
  "swagger": "2.0",
  "info": {
    "description": "Hello world!",
    "version": "0.1",
    "title": "TripNJoy"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "auth-controller",
      "description": "Auth Controller"
    },
    {
      "name": "user-controller",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/auth/forgotpassword": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Used to receive a confirmation to update a password",
        "operationId": "forgotPasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "forgotPasswordRequest",
            "description": "forgotPasswordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email is sent to reset password"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "If the user does not exist"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Log a user, to allow authenticated endpoints",
        "operationId": "loginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loginRequest",
            "description": "loginRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication Succeeded. Use the given jwt in following requests",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Authentication failed. Wrong username or password"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Create a new account. Will send a confirmation mail to the given address",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "model",
            "description": "model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is created",
            "schema": {
              "$ref": "#/definitions/AuthTokenResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "If the email is already in use by another user"
          }
        }
      }
    },
    "/auth/validatepassword": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Used to update the password with a confirmation code",
        "operationId": "validateCodePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "validateCodePasswordRequest",
            "description": "validateCodePasswordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCodePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The password has been updated",
            "schema": {
              "$ref": "#/definitions/UserIdResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Invalid or expired confirmation code"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{id}/confirm": {
      "patch": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Confirm a user's email",
        "operationId": "confirmUserUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "confirmationCode",
            "description": "confirmationCode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmationCodeModel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User is now confirmed"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Invalid or expired confirmation code"
          }
        }
      }
    },
    "/auth/{id}/re-send": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Will send a new confirmation code to the user",
        "operationId": "resendConfirmationCodeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "A new confirmation code has been sent"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "The user is already confirmed"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{id}/updateemail": {
      "patch": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Used to ask update the user email",
        "operationId": "updateEmailUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "updateEmailRequest",
            "description": "updateEmailRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the email has been updated"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "If the given password is not valid"
          },
          "422": {
            "description": "If the new email does not exist or is already in use"
          }
        }
      }
    },
    "/auth/{id}/updatepassword": {
      "patch": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Used to update the password",
        "operationId": "updatePasswordUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "updatePasswordRequest",
            "description": "updatePasswordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the password has been updated"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "If the old password is not valid"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "getCurrentUser",
        "operationId": "getCurrentUserUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "getUserById",
        "operationId": "getUserByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "deleteUserAccount",
        "operationId": "deleteUserAccountUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteUserRequest",
            "description": "deleteUserRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteUserRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/{id}/admin": {
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "deleteUserByAdmin",
        "operationId": "deleteUserByAdminUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteUserByAdminRequest",
            "description": "deleteUserByAdminRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteUserByAdminRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/{id}/update": {
      "patch": {
        "tags": [
          "user-controller"
        ],
        "summary": "Used to update the user information",
        "operationId": "updateUserInfoUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "userUpdateRequest",
            "description": "userUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information have been updated"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "If the user does not exist"
          }
        }
      }
    }
  },
  "definitions": {
    "AuthTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "title": "AuthTokenResponse"
    },
    "CityEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "CityEntity"
    },
    "CityModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "CityModel"
    },
    "ConfirmationCodeModel": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "ConfirmationCodeModel"
    },
    "DeleteUserByAdminRequest": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        }
      },
      "title": "DeleteUserByAdminRequest"
    },
    "DeleteUserRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      },
      "title": "DeleteUserRequest"
    },
    "ForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "title": "ForgotPasswordRequest"
    },
    "GenderEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "GenderEntity"
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "Aka email"
        }
      },
      "title": "LoginRequest"
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "LoginResponse"
    },
    "RoleEntity": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "RoleEntity"
    },
    "UpdateEmailRequest": {
      "type": "object",
      "properties": {
        "newEmail": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "UpdateEmailRequest"
    },
    "UpdatePasswordRequest": {
      "type": "object",
      "properties": {
        "newPassword": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        }
      },
      "title": "UpdatePasswordRequest"
    },
    "UserCreationRequest": {
      "type": "object",
      "properties": {
        "birthDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      },
      "title": "UserCreationRequest"
    },
    "UserEntity": {
      "type": "object",
      "properties": {
        "birthDate": {
          "type": "string",
          "format": "date-time"
        },
        "city": {
          "$ref": "#/definitions/CityEntity"
        },
        "confirmed": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/GenderEntity"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "profilePicture": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleEntity"
          }
        }
      },
      "title": "UserEntity"
    },
    "UserIdResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UserIdResponse"
    },
    "UserModel": {
      "type": "object",
      "properties": {
        "birthDate": {
          "type": "string",
          "format": "date-time"
        },
        "city": {
          "$ref": "#/definitions/CityModel"
        },
        "confirmed": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": [
            "FEMALE",
            "MALE",
            "NOT_SPECIFIED"
          ]
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "profilePicture": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ADMIN",
              "DEFAULT"
            ]
          }
        }
      },
      "title": "UserModel"
    },
    "UserUpdateRequest": {
      "type": "object",
      "properties": {
        "city": {
          "$ref": "#/definitions/CityModel"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "profilePicture": {
          "type": "string"
        }
      },
      "title": "UserUpdateRequest"
    },
    "ValidateCodePasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ValidateCodePasswordRequest"
    }
  }
}