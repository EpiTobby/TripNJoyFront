name: Deployment of TripNJoy

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:

jobs:

  install-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.1'
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          architecture: x64
      - run: flutter pub get
      - run: flutter test

  install-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.1'
          channel: 'stable'
          architecture: 'x64'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
      - run: flutter pub get
      - run: flutter test

  build-web:
    runs-on: ubuntu-latest
    needs: install-ubuntu
    steps:
      - run: flutter build web --dart-define=USER_POOL_ID=${{ secrets.USER_POOL_ID }} --dart-define=CLIENT_ID=${{ secrets.CLIENT_ID }} --dart-define=CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: admin_app
          path: build/web/

  build-android:
    runs-on: ubuntu-latest
    needs: install-ubuntu
    steps:
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - run: flutter build apk --dart-define=USER_POOL_ID=${{ secrets.USER_POOL_ID }} --dart-define=CLIENT_ID=${{ secrets.CLIENT_ID }} --dart-define=CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
      - run: flutter build appbundle --dart-define=USER_POOL_ID=${{ secrets.USER_POOL_ID }} --dart-define=CLIENT_ID=${{ secrets.CLIENT_ID }} --dart-define=CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: admin_app
          path: build/app/outputs/apk/release/app-release.apk

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.1'
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          architecture: x64
      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter test
      - run: flutter build windows --dart-define=USER_POOL_ID=${{ secrets.USER_POOL_ID }} --dart-define=CLIENT_ID=${{ secrets.CLIENT_ID }} --dart-define=CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: admin_app
          path: build/windows/runner/Release/

  build-macos:
    runs-on: macos-latest
    needs: install-macos
    steps:
      - run: flutter config --enable-macos-desktop
      - run: flutter build macos --dart-define=USER_POOL_ID=${{ secrets.USER_POOL_ID }} --dart-define=CLIENT_ID=${{ secrets.CLIENT_ID }} --dart-define=CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: admin_app
          path: build/macos/Build/Products/Release

  build-ios:
    runs-on: macos-latest
    needs: install-macos
    steps:
      - run: flutter build ios --release --no-codesign --dart-define=USER_POOL_ID=${{ secrets.USER_POOL_ID }} --dart-define=CLIENT_ID=${{ secrets.CLIENT_ID }} --dart-define=CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}

  release-macos:
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - run: echo "::set-output name=version::$(grep -E 'version. (.*)' pubspec.yaml -m 1 > tmp && grep -Eo '\d.*' tmp && rm tmp)"
        name: Get version
        id: get_version
      - run: mkdir -p tmp/admin-app && cd tmp/admin-app
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: admin_app
          path: /Users/runner/work/admin-app/admin-app/tmp
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.get_version.outputs.version }}
          tag_name: ${{ github.ref }}
          body: Some changes
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - run: chmod +x admin_app.app/Contents/MacOS/admin_app
      - run: cd /Users/runner/work/admin-app/admin-app/tmp && zip -r admin-app.zip admin-app
      - run: pwd
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /Users/runner/work/admin-app/admin-app/admin-app.zip
          asset_name: admin_app.zip
          asset_content_type: application/zip